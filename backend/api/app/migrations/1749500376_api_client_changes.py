"""api_client changes

Revision ID: 1749500376
Revises: 1748273173
Create Date: 2025-06-09 20:19:36.339742

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1749500376"
down_revision: Union[str, None] = "1748273173"
branch_labels: Union[str, Sequence[str], None] = ()
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("api_clients", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "hashed_api_key",
                sa.String(length=128),
                nullable=False,
                server_default="",
            )
        )
        batch_op.add_column(sa.Column("last_used_at", sa.DateTime(), nullable=True))
        batch_op.add_column(
            sa.Column("use_count", sa.Integer(), nullable=False, server_default="0")
        )

        # Check if the old constraint exists before dropping it.
        # This is necessary because in a fresh migration, the table created
        # by batch mode might not have the old named constraint.
        inspector = sa.inspect(op.get_bind())
        constraints = inspector.get_unique_constraints("api_clients")
        if any(c["name"] == "api_clients_api_key_key" for c in constraints):
            batch_op.drop_constraint("api_clients_api_key_key", type_="unique")

        batch_op.create_unique_constraint(
            batch_op.f("uq_api_clients_hashed_api_key"), ["hashed_api_key"]
        )
        batch_op.drop_column("api_key")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("api_clients", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "api_key",
                sa.VARCHAR(length=64),
                autoincrement=False,
                nullable=False,
                server_default="",
            )
        )
        batch_op.drop_constraint(
            batch_op.f("uq_api_clients_hashed_api_key"), type_="unique"
        )
        batch_op.create_unique_constraint("api_clients_api_key_key", ["api_key"])
        batch_op.drop_column("use_count")
        batch_op.drop_column("last_used_at")
        batch_op.drop_column("hashed_api_key")
    # ### end Alembic commands ###
