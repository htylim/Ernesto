---
description: 
globs: 
alwaysApply: true
---
# Initial Analysis
- Read [README.md](mdc:README.md) and [ARCHITECTURE.md](mdc:ARCHITECTURE.md)
- Think **thoroughly**
- Create `TASKS.md` with a detailed step-by-step plan
- Break down large steps into smaller sub-steps
- Mark completed plan steps with ✅
- `TASKS.md` Example:
```
# Foo implementation
- [ ] step X
    - ✅ sub-step X-a
    - [ ] sub-step X-b
- [ ] step Y
- [ ] step Z
```

# Development Approach
- Write clean, maintainable code
- Follow project-wide naming conventions
- Document functions and types
- Delete code instead of commenting it out
- Keep UI, logic, and API layers separate

# Testing
- Use Vitest for testing
- Follow the `/tests/unit` directory structure.
- Unit test directory structure example:
  For `src/common/crypto/cryptoUtils.js` we use `tests/unit/common/crypto/crytoUtils.test.js`
- Ensure all tests pass before completing tasks

# Chrome Extension Specifics
- Use Manifest V3
- Follow security best practices
- Optimize performance
- Handle errors gracefully
- Focus on user experience

# Documentation
- Update `README.md` for feature changes
- Update `ARCHITECTURE.md` for structural changes
- Keep documentation current

# Communication
- Be brief and concise
- Focus on technical accuracy
- Provide clear, actionable steps


